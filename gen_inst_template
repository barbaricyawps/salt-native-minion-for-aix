#!/usr/bin/bash

# Copyright 2019-2022 VMware, Inc.
# SPDX-License-Identifier: Apache-2

# SCRIPT_VERSION=2022.11.16.01

## using bash for now to test, needs to be ksh eventuaklly for AIX

# shellcheck disable=SC2012,SC2129

set -o functrace

## helper functions

_timestamp() {
    date "+%Y-%m-%d %H:%M:%S:"
}

_log() {
    echo "$1//^/$(_timestamp) " >> "$log_file"
}

# Both echo and log
_display() {
    echo "$1"
    _log "$1"
}

_error() {
    msg="ERROR: $1"
    echo "$msg" 1>&2
    echo "$(_timestamp) $msg" >>"$log_file"
    echo "One or more errors found. See $log_file for details." 1>&2
    exit 1
}

_warning() {
    msg="WARNING: $1"
    echo "$msg" 1>&2
    echo "$(_timestamp) $msg" >>"$log_file"
}

# this find/grep will have to be modified for running on AIX
_get_list_of_sym_linked_files() {
    symlinkfilelist=$(find . -type l -print)
}


# AIX installp doesn't handle symlinks, so have to scripts to
# create symlink'd files post install and removal of fileset

_gen_post_install_remove_scripts() {
    echo "#!/usr/bin/ksh" > "${post_install_file}"
    chmod 755 "${post_install_file}"
    echo "ln -f -s /opt/saltstack/salt/etc/salt /etc/salt" >> "${post_install_file}"

    for afile in ${symlinkfilelist}
    do
        absdir=""
        absfile=""
        opt_prefix="/opt/saltstack/salt"
        symlinkfilelist_target=""
        symlinkfilelist_target=$(ls -l "${afile}" | cut -d '>' -f 2 | awk -F"opt" '{print $2}' | sed "s/^\/freeware//")
        if test -z "${symlinkfilelist_target}"; then
          opt_prefix=
          symlinkfilelist_target=$(ls -l "${afile}" | cut -d '>' -f 2)
        fi
        absdir=$(dirname "${afile//^\./}")
        absfile="${afile//^\./}"

        echo "mkdir -p ${absdir}" >> "${post_install_file}"
        echo "cd ${absdir}" >> "${post_install_file}"
        if test ! -z "${symlinkfilelist_target}"; then
          echo "ln -f -s ${opt_prefix}${symlinkfilelist_target} ${absfile}" >> "${post_install_file}"
        fi
    done
}


_remove_symlinkd_files() {
    for afile in ${symlinkfilelist}
    do
        rm -f "${afile}"
    done
}


# this find/grep will have to be modified for running on AIX
_gen_list_of_root_files() {
     root_filelist=$(find . -type f | grep -v '^\./usr' | sed 's/^\.//')
}


# this find/grep will have to be modified for running on AIX
_gen_list_of_usr_files() {
    usr_filelist=$(find . -type f | grep '^\./usr' | sed 's/^\.//')
}

# this find/grep will have to be modified for running on AIX
_gen_list_of_conf_files() {
    conf_filelist=$(find . -type f | grep '^\./opt/saltstack/salt/etc/salt' | sed 's/^\.//')
}

_gen_conf_files_override_boilerplate() {
    echo "  owner =" >>"${conf_override_file}"
    echo "  group =" >>"${conf_override_file}"
    echo "  mode =" >>"${conf_override_file}"
    echo "  type =" >>"${conf_override_file}"
    echo "  class =" >>"${conf_override_file}"
    echo "  size = VOLATILE" >>"${conf_override_file}"
    echo "  checksum = VOLATILE" >>"${conf_override_file}"
    echo "  " >>"${conf_override_file}"
}


_gen_conf_files_override() {
    for idx in ${conf_filelist}
    do
        echo "./${idx}:" >> "${conf_override_file}"
        _gen_conf_files_override_boilerplate
    done
}


## _gen_restore_conf_files() {
##     cat <<@EOF >"${restore_conf_wrkfile}"
## #!/usr/bin/ksh -x
## # restores any pre-existing salt configuration files
## # in ${confsavedir} in /opt/saltstack/salt/etc/salt
##
## if [ -d ${confsavedir} ]
## then
##     mkdir -p /opt/saltstack/salt/etc/salt
##     for idx in \`ls ${confsavedir}\`
##     do
##         cp  "${confsavedir}/\${idx}" /opt/saltstack/salt/etc/salt/
##     done
## fi
## @EOF
## }


_gen_installp_template() {
    cat <<@EOF >"${INSTALLP_TEMPLATE}"
Package Name: ${SALT_NAME}
Package VRMF: ${SALT_VERSION}
Update: N
Fileset
  Fileset Name: ${SALT_NAME}.rte
  Fileset VRMF: ${SALT_VERSION}
  Fileset Description: SaltProject for AIX
  USRLIBLPPFiles
  EOUSRLIBLPPFiles
  ROOTLIBLPPFiles
  Post-installation Script: ${post_install_file}
  EOROOTLIBLPPFiles
  Bosboot required: N
  License agreement acceptance required: N
  Include license files in this package: N
  Requisites:
  Upsize: / 90000; /usr 1000;
  USRFiles
@EOF

    for idx in ${usr_filelist}
    do
        echo "    ${idx}" >>"${INSTALLP_TEMPLATE}"
    done

    cat <<@EOF >>"${INSTALLP_TEMPLATE}"
  EOUSRFiles
  ROOT Part: Y
  ROOTFiles
@EOF

    for idx in ${root_filelist}
    do
        echo "    ${idx}" >>"${INSTALLP_TEMPLATE}"
    done

    cat <<@EOF >>"${INSTALLP_TEMPLATE}"
  EOROOTFiles
  OVERRIDE_INVENTORY: ${conf_override_file}
  Relocatable: N
EOFileset
@EOF

}


#################################### MAIN ####################################

# static definitions

log_file_format="${HOMEDIR_PREFIX}/gen_inst_template.%Y%m%d%H%M%S.log"
log_file=""
log_file="$(date \"+"${log_file_format}"\")"

base_dir="${HOMEDIR_PREFIX}/prep_rte_area"
if test ! -d "${base_dir}"; then
  mkdir -p "${base_dir}"
fi

wrkdir="${base_dir}"
if test ! -d "${wrkdir}"; then
  mkdir -p "${wrkdir}"
fi

## confsavedir="/usr/salt/salt_archive"

post_install_dir="${wrkdir}/opt/saltstack/salt/install"
if test ! -d  "${post_install_dir}"; then
  mkdir -p "${post_install_dir}"
fi
post_install_file="${post_install_dir}/salt_postinstall_i"
conf_override_file="${post_install_dir}/salt_override.inv"

#ensure file exist for scans below
touch "${post_install_file}"
chmod 0755 "${post_install_file}"
touch "${conf_override_file}"


SALT_NAME="salt"
## keep version 4 digits
## SALT_VERSION="19.2.6.1"
## SALT_VERSION="30.0.0.1"
## SALT_VERSION="30.0.0.4"
## SALT_VERSION="30.0.1.1"
## SALT_VERSION="30.0.2.0"
## SALT_VERSION="30.0.3.1"
SALT_VERSION="SALT_VERSION_STRING"

INSTALLP_TEMPLATE="${base_dir}/${SALT_NAME}.template"

# global vars
## initialdir=""
root_filelist=""
usr_filelist=""
conf_filelist=""

#script main body

## initialdir=$(pwd)
cd "$wrkdir" || exit

# generate post install and removal cleanup scripts
# which handle symlink issues
_get_list_of_sym_linked_files
_gen_post_install_remove_scripts
_remove_symlinkd_files

# now  create template as syymlink'd files removed
_gen_list_of_conf_files
_gen_list_of_root_files
_gen_list_of_usr_files
_gen_conf_files_override
_gen_installp_template
